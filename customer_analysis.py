# -*- coding: utf-8 -*-
"""Customer Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b6Xz88qy6LdcDkGRvFE9NVU5Pt-5S-UE
"""

import numpy as np
import pandas as pd
#import sklear.
from matplotlib import pyplot as plt
import seaborn as sns

df =pd.read_csv("/content/Mall_Customers.csv")
df.head()

#df.rename(columns={"Gender":"Gen"},inplace=True)
df.isnull().sum()

df.dtypes

df.shape

df.describe()

df.drop(["CustomerID"],axis=1,inplace=True)

df.head()

plt.figure(1,figsize=(15,6))
n=0
for x in ["Age","Annual Income (k$)","Spending Score (1-100)"]:
  n+=1
  plt.subplot(1,3,n)
  plt.subplots_adjust(hspace=0.5,wspace=0.5)
  sns.distplot(df[x],bins=20)
  plt.title("Displot of {}".format(x))
plt.show()

plt.figure(figsize=(15,6))
sns.countplot(y="Gender",data=df)
plt.show()

plt.figure(1,figsize=(15,6))
n=0
for cols in["Age","Annual Income (k$)","Spending Score (1-100)"]:
  n+=1
  plt.subplot(1,3,n)
  sns.set(style="whitegrid")
  plt.subplots_adjust(hspace=0.5,wspace=0.5)
  sns.violinplot(x=cols,y="Gender",data=df)
  plt.title("Violin Plot")
plt.show()

#df.describe()
age_18_25=df.Age[(df.Age>=18) & (df.Age<=25)]
age_26_35=df.Age[(df.Age>=26) & (df.Age<=35)]
age_36_45=df.Age[(df.Age>=36) & (df.Age<=45)]
age_46_55=df.Age[(df.Age>=46) & (df.Age<=55)]
age_55_above=df.Age[df.Age>=56]

agex=["18-25","26-35","36-45",'46-55',"55+"]
agey= [len(age_18_25.values),len(age_26_35.values),len(age_36_45.values),len(age_46_55.values),len(age_55_above.values)]

plt.figure(figsize=(15,6))
sns.barplot(x=agex,y=agey,palette="mako")
plt.title("Number of Customers and Ages")
plt.xlabel("Ages")
plt.ylabel("Number of Persons")
plt.show()

sns.relplot(x="Annual Income (k$)",y="Spending Score (1-100)",data=df)

Score_0_20=df["Spending Score (1-100)"][(df["Spending Score (1-100)"]>=1) & (df["Spending Score (1-100)"]<=20)]
Score_21_40=df["Spending Score (1-100)"][(df["Spending Score (1-100)"]>=21) & (df["Spending Score (1-100)"]<=40)]
Score_41_60=df["Spending Score (1-100)"][(df["Spending Score (1-100)"]>=41) & (df["Spending Score (1-100)"]<=60)]
Score_61_80=df["Spending Score (1-100)"][(df["Spending Score (1-100)"]>=61) & (df["Spending Score (1-100)"]<=80)]
Score_80_above=df["Spending Score (1-100)"][df["Spending Score (1-100)"]>=81]

Scorex=["0-20","21-40","41-60",'61-80',"80+"]
Scorey= [len(Score_0_20.values),len(Score_21_40.values),len(Score_41_60.values),len(Score_61_80.values),len(Score_80_above.values)]

plt.figure(figsize=(15,6))
sns.barplot(x=Scorex,y=Scorey,palette="rocket")
plt.title("Number of Customers and Spending Scores")
plt.xlabel("Spending Scores")
plt.ylabel("Number of Persons")
plt.show()

AI_15_35=df["Annual Income (k$)"][(df["Annual Income (k$)"]>=15) & (df["Annual Income (k$)"]<=35)]
AI_36_55=df["Annual Income (k$)"][(df["Annual Income (k$)"]>=36) & (df["Annual Income (k$)"]<=55)]
AI_56_75=df["Annual Income (k$)"][(df["Annual Income (k$)"]>=56) & (df["Annual Income (k$)"]<=75)]
AI_76_95=df["Annual Income (k$)"][(df["Annual Income (k$)"]>=76) & (df["Annual Income (k$)"]<=95)]
AI_95_above=df["Annual Income (k$)"][df["Annual Income (k$)"]>=96]

AIx=["$15000-35000","$36000-55000","$56000-75000",'$76000-95000',"$95000+"]
AIy= [len(AI_15_35.values),len(AI_36_55.values),len(AI_56_75.values),len(AI_76_95.values),len(AI_95_above.values)]

plt.figure(figsize=(15,6))
sns.barplot(x=AIx,y=AIy,palette="Spectral")
plt.title("Number of Customers and Annual Income (k$)")
plt.xlabel("Annual Income (k$)")
plt.ylabel("Number of Persons")
plt.show()

df.head()

df["Annual Income (k$)"].unique()

df.describe()

X1=df.loc[:,["Age","Spending Score (1-100)"]].values
from sklearn.cluster import KMeans
wcss=[]
for k in range(1,11):
  kmeans=KMeans(n_clusters=k,init="k-means++")
  kmeans.fit(X1)
  wcss.append(kmeans.inertia_)
plt.figure(figsize=(15,6))
plt.grid()
plt.plot(range(1,11),wcss,linewidth=2,color="red",marker="8")
plt.title("KMeans for Age and Spending Score(1-100)")
plt.xlabel("KMeans")
plt.ylabel("wcss")
plt.show()

kmeans=KMeans(n_clusters=4)
label=kmeans.fit_predict(X1)
print(label)

print(kmeans.cluster_centers_)

plt.scatter(X1[:,0],X1[:,1],c=kmeans.labels_,cmap="rainbow")
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],color="black")
plt.title("Clusters of Costumer")
plt.xlabel("Age")
plt.ylabel("Spending Score(1-100)")
plt.show()

X2=df.loc[:,["Annual Income (k$)","Spending Score (1-100)"]].values
from sklearn.cluster import KMeans
wcss=[]
for k in range(1,11):
  kmeans=KMeans(n_clusters=k,init="k-means++")
  kmeans.fit(X2)
  wcss.append(kmeans.inertia_)
plt.figure(figsize=(15,6))
plt.grid()
plt.plot(range(1,11),wcss,linewidth=2,color="red",marker="8")
plt.title("KMeans for Annual Income (k$) and Spending Score(1-100)")
plt.xlabel("KMeans")
plt.ylabel("wcss")
plt.show()

kmeans=KMeans(n_clusters=5)
label=kmeans.fit_predict(X2)
print(label)

print(kmeans.cluster_centers_)

plt.scatter(X2[:,0],X2[:,1],c=kmeans.labels_,cmap="rainbow")
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],color="black")
plt.title("Clusters of Costumer")
plt.xlabel("Annual Income (k$)")
plt.ylabel("Spending Score(1-100)")
plt.show()

X3=df.iloc[:,1:].values
from sklearn.cluster import KMeans
wcss=[]
for k in range(1,11):
  kmeans=KMeans(n_clusters=k,init="k-means++")
  kmeans.fit(X3)
  wcss.append(kmeans.inertia_)
plt.figure(figsize=(15,6))
plt.grid()
plt.plot(range(1,11),wcss,linewidth=2,color="red",marker="8")
#plt.title("KMeans for Annual Income (k$) and Spending Score(1-100)")
plt.xlabel("KMeans")
plt.ylabel("wcss")
plt.show()

kmeans=KMeans(n_clusters=5)
label=kmeans.fit_predict(X3)
print(label)

print(kmeans.cluster_centers_)

clusters=kmeans.fit_predict(X3)
df["label"]=clusters
from mpl_toolkits.mplot3d import Axes3D
fig=plt.figure(figsize=(20,10))
ax=fig.add_subplot(111,projection="3d")
ax.scatter(df.Age[df.label==0],df["Annual Income (k$)"][df.label==0],df["Spending Score (1-100)"][df.label==0],c="blue",s=60)
ax.scatter(df.Age[df.label==1],df["Annual Income (k$)"][df.label==1],df["Spending Score (1-100)"][df.label==1],c="red",s=60)
ax.scatter(df.Age[df.label==2],df["Annual Income (k$)"][df.label==2],df["Spending Score (1-100)"][df.label==2],c="green",s=60)
ax.scatter(df.Age[df.label==3],df["Annual Income (k$)"][df.label==3],df["Spending Score (1-100)"][df.label==3],c="orange",s=60)
ax.scatter(df.Age[df.label==4],df["Annual Income (k$)"][df.label==4],df["Spending Score (1-100)"][df.label==4],c="purple",s=60)
ax.view_init(30,185)
plt.ylabel("Annual Income (k$)")
plt.xlabel("Age")
ax.set_zlabel("Spending Score(1-100)")
plt.show()